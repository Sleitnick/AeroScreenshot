<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>